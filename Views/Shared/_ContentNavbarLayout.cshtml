@await Html.PartialAsync("Sections/_Variables")
@{
  TempData.Keep();
  Layout = "_CommonMasterLayout";

  TempData["menuHorizontal"] = false;
  ViewData["contentNavbar"] = false;

  @* Display elements *@
  ViewData["isNavbar"] = (ViewData["isNavbar"] ??= true);
  ViewData["isMenu"] = (ViewData["isMenu"] ??= true);
  ViewData["isFlex"] = (ViewData["isFlex"] ??= false);
  ViewData["isFooter"] = (ViewData["isFooter"] ??= true);

  @* HTML Classes *@
  ViewData["navbarDetached"] = (ViewData["navbarDetached"] ?? "navbar-detached");
  ViewData["menuFixed"] = (ViewData["menuFixed"] ?? "layout-menu-fixed");
  ViewData["navbarType"] = (ViewData["navbarType"] ?? "layout-navbar-fixed");

  @* Content classes *@
  ViewData["container"] = (ViewData["container"] ?? "container-xxl");
  ViewData["containerNav"] = (ViewData["containerNav"] ?? "container-xxl");
}


@{
  bool isMenu = ViewData["isMenu"] != null && Convert.ToBoolean(ViewData["isMenu"]);
}

<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8" />
  <title>@ViewData["Title"]</title>

  @RenderSection("VendorStyles", required: false)
</head>

<body>
  <div class="layout-wrapper layout-content-navbar @(isMenu ? "" : "layout-without-menu")">
    <div class="layout-container">

      @RenderSection("VendorScripts", required: false)
      @RenderSection("PageScripts", required: false)
      @RenderSection("Scripts", required: false)
      @RenderSection("PageStyles", required: false)


      @if (isMenu)
      {
        @await Html.PartialAsync("Sections/Menu/_VerticalMenu")
      }

      <!-- Layout page -->
      <div class="layout-page">
        <!-- Navbar -->
        @if (@ViewData["isNavbar"] != null && Convert.ToBoolean(@ViewData["isNavbar"]))
        {
          @await Html.PartialAsync("Sections/Navbar/_Navbar")
        }
        <!-- / Navbar -->

        <!-- Content wrapper -->
        <div class="content-wrapper">

          <!-- Offcanvas Structure -->
          <div class="offcanvas offcanvas-end" tabindex="-1" id="addCustomerOffcanvas"
            aria-labelledby="addCustomerLabel">
            <div class="offcanvas-header">
              <h5 class="offcanvas-title" id="addCustomerLabel">Lägg till ny kund</h5>
              <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas"
                aria-label="Close"></button>
            </div>
            <div class="offcanvas-body">
              <form asp-action="AddCustomer" method="post" class="d-flex flex-column gap-3">
                <div>
                  <label class="form-label">Kundnamn</label>
                  <input type="text" class="form-control" name="CustomerName" placeholder="Ange kundnamn" required />
                </div>
                <div>
                  <label class="form-label">Kund-ID</label>
                  <input type="text" class="form-control" name="CustomerID" placeholder="Ange kund-ID" required />
                </div>
                <div>
                  <label class="form-label">Kontakt Person</label>
                  <input type="text" class="form-control" name="ContactPerson" placeholder="Ange kontaktperson" />
                </div>
                <div>
                  <label class="form-label">E-post</label>
                  <input type="email" class="form-control" name="Email" placeholder="Ange e-postadress" />
                </div>
                <div>
                  <label class="form-label">Webbplats</label>
                  <input type="url" class="form-control" name="Website" placeholder="Ange webbplats" />
                </div>
                <div>
                  <label class="form-label">Klassificering</label>
                  <select class="form-select" name="Classification">
                    <option selected disabled>Välja...</option>
                    <option value="A Customer">A Kund</option>
                    <option value="B Customer">B Kund</option>
                    <option value="C Customer">C Kund</option>
                    <option value="D Customer">D Kund</option>
                    <option value="Not Active">Inte aktiv</option>
                    <option value="Prospect">Utsikt</option>
                  </select>
                </div>
                <div>
                  <label class="form-label">Nöjdhetsnivå</label>
                  <select class="form-select" name="SatisfactionLevel">
                    <option selected disabled>Välja...</option>
                    <option value="Satisfied">Nöjd</option>
                    <option value="Not Satisfied">Inte nöjd</option>
                    <option value="No Record">Ingen post</option>
                  </select>
                </div>
                <div>
                  <label class="form-label">Utvärderingsdatum</label>
                  <input type="date" class="form-control" name="EvaluationDate" />
                </div>
                <div class="d-flex justify-content-end gap-2 mt-4">
                  <button type="submit" class="btn" style="background-color:#5C7CFA; color:white;">Överlämna</button>
                  <button type="button" class="btn" style="background-color: #FFE4E6; color: #FF0000;"
                    data-bs-dismiss="offcanvas">Avboka</button>
                </div>
              </form>
            </div>
          </div>

          <!-- Content -->
          <div
            class='@ViewData["container"] @(Convert.ToBoolean(@ViewData["isFlex"]) ? "d-flex align-items-stretch flex-grow-1 p-0" : "flex-grow-1 container-p-y")'>
            @RenderSection("ControlsSection", required: false)
            @RenderBody()
          </div>
          <!-- / Content -->

          <!-- Footer -->
          @if (@ViewData["isFooter"] != null && Convert.ToBoolean(@ViewData["isFooter"]))
          {
            @await Html.PartialAsync("Sections/Footer/_Footer")
          }
          <!-- / Footer -->
          <div class="content-backdrop fade"></div>
        </div>
        <!--/ Content wrapper -->
      </div>
      <!-- / Layout page -->
    </div>

    <!-- Overlay -->
    @if (@ViewData["isMenu"] != null && Convert.ToBoolean(@ViewData["isMenu"]))
    {
      <div class="layout-overlay layout-menu-toggle"></div>
    }
    <div class="drag-target"></div>
  </div>
  <script src="~/vendor/libs/jquery/jquery.min.js"></script>
  <script src="~/vendor/libs/jstree/jstree.min.js"></script>




</body>

</html>
